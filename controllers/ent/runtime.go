// Code generated by entc, DO NOT EDIT.

package ent

import (
	"online-supermarket/controllers/ent/customer"
	"online-supermarket/controllers/ent/order"
	"online-supermarket/controllers/ent/product"
	"online-supermarket/controllers/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescEmail is the schema descriptor for email field.
	customerDescEmail := customerFields[0].Descriptor()
	// customer.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	customer.EmailValidator = customerDescEmail.Validators[0].(func(string) error)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescAmmount is the schema descriptor for ammount field.
	orderDescAmmount := orderFields[0].Descriptor()
	// order.AmmountValidator is a validator for the "ammount" field. It is called by the builders before save.
	order.AmmountValidator = orderDescAmmount.Validators[0].(func(float64) error)
	// orderDescDate is the schema descriptor for date field.
	orderDescDate := orderFields[3].Descriptor()
	// order.DefaultDate holds the default value on creation for the date field.
	order.DefaultDate = orderDescDate.Default.(time.Time)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCreateDate is the schema descriptor for create_date field.
	productDescCreateDate := productFields[6].Descriptor()
	// product.DefaultCreateDate holds the default value on creation for the create_date field.
	product.DefaultCreateDate = productDescCreateDate.Default.(time.Time)
	// productDescStock is the schema descriptor for stock field.
	productDescStock := productFields[7].Descriptor()
	// product.DefaultStock holds the default value on creation for the stock field.
	product.DefaultStock = productDescStock.Default.(int)
}
